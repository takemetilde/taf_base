<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="ubuntu-ThinkPad-T450s" ignored="0" name="Surefire test" tests="76" failures="0" timestamp="30 Jul 2019 12:07:43 GMT" time="2.941" errors="0">
  <testcase name="lackOfInstallPatternRejected on lackOfInstallPatternRejected(com.taf.auto.page.AbstractPageTest)" time="0.074" classname="com.taf.auto.page.AbstractPageTest"/>
  <testcase name="installPatternEnforced on installPatternEnforced(com.taf.auto.page.AbstractPageTest)" time="0.079" classname="com.taf.auto.page.AbstractPageTest"/>
  <testcase name="rudimentary on rudimentary(com.taf.auto.spellcheck.SpellingScannerTest)" time="2.016" classname="com.taf.auto.spellcheck.SpellingScannerTest"/>
  <testcase name="standardizeColumnWidthsTest on standardizeColumnWidthsTest(com.taf.auto.common.PrettyPrinterTest)" time="0.012" classname="com.taf.auto.common.PrettyPrinterTest"/>
  <testcase name="prettyArray on prettyArray(com.taf.auto.common.PrettyPrinterTest)" time="0.012" classname="com.taf.auto.common.PrettyPrinterTest"/>
  <testcase name="recordColumnWidthsTest on recordColumnWidthsTest(com.taf.auto.common.PrettyPrinterTest)" time="0.013" classname="com.taf.auto.common.PrettyPrinterTest"/>
  <testcase name="stripTrailingIndexTest on stripTrailingIndexTest(com.taf.auto.StringUtilTest)" time="0.001" classname="com.taf.auto.StringUtilTest"/>
  <testcase name="allLinesEqualTest on allLinesEqualTest(com.taf.auto.StringUtilTest)" time="0.001" classname="com.taf.auto.StringUtilTest"/>
  <testcase name="stripQuotedTest on stripQuotedTest(com.taf.auto.StringUtilTest)" time="0.001" classname="com.taf.auto.StringUtilTest"/>
  <testcase name="validateTest on validateTest(com.taf.auto.jira.xray.ScenarioEmitterTest)" time="0.081" classname="com.taf.auto.jira.xray.ScenarioEmitterTest"/>
  <testcase name="validateEmptyTest on validateEmptyTest(com.taf.auto.jira.xray.ScenarioEmitterTest)" time="0.081" classname="com.taf.auto.jira.xray.ScenarioEmitterTest"/>
  <testcase name="validateMalformedTest on validateMalformedTest(com.taf.auto.jira.xray.ScenarioEmitterTest)" time="0.084" classname="com.taf.auto.jira.xray.ScenarioEmitterTest"/>
  <testcase name="testNames on testNames(com.taf.auto.jira.xray.XrayTestStatusesTest)" time="0.002" classname="com.taf.auto.jira.xray.XrayTestStatusesTest"/>
  <testcase name="testDecode on testDecode(com.taf.auto.jira.xray.pojo.XrayExecutionResultTest)" time="0.216" classname="com.taf.auto.jira.xray.pojo.XrayExecutionResultTest"/>
  <testcase name="fetchIssuesByTestSetTest on fetchIssuesByTestSetTest(com.taf.auto.jira.pojo.xray.TestXrayUtil)" time="0.0" classname="com.taf.auto.jira.pojo.xray.TestXrayUtil">
    <skipped/>
  </testcase> <!-- fetchIssuesByTestSetTest on fetchIssuesByTestSetTest(com.taf.auto.jira.pojo.xray.TestXrayUtil) -->
  <testcase name="test12430 on test12430(com.taf.auto.jira.pojo.xray.XrayTestTest)" time="0.0" classname="com.taf.auto.jira.pojo.xray.XrayTestTest">
    <skipped/>
  </testcase> <!-- test12430 on test12430(com.taf.auto.jira.pojo.xray.XrayTestTest) -->
  <testcase name="test14845 on test14845(com.taf.auto.jira.pojo.xray.XrayTestTest)" time="0.0" classname="com.taf.auto.jira.pojo.xray.XrayTestTest">
    <skipped/>
  </testcase> <!-- test14845 on test14845(com.taf.auto.jira.pojo.xray.XrayTestTest) -->
  <testcase name="test15861 on test15861(com.taf.auto.jira.pojo.xray.XrayTestTest)" time="0.0" classname="com.taf.auto.jira.pojo.xray.XrayTestTest">
    <skipped/>
  </testcase> <!-- test15861 on test15861(com.taf.auto.jira.pojo.xray.XrayTestTest) -->
  <testcase name="test16101 on test16101(com.taf.auto.jira.pojo.xray.XrayTestTest)" time="0.0" classname="com.taf.auto.jira.pojo.xray.XrayTestTest">
    <skipped/>
  </testcase> <!-- test16101 on test16101(com.taf.auto.jira.pojo.xray.XrayTestTest) -->
  <testcase name="test19303 on test19303(com.taf.auto.jira.pojo.xray.XrayTestTest)" time="0.0" classname="com.taf.auto.jira.pojo.xray.XrayTestTest">
    <skipped/>
  </testcase> <!-- test19303 on test19303(com.taf.auto.jira.pojo.xray.XrayTestTest) -->
  <testcase name="test21188 on test21188(com.taf.auto.jira.pojo.xray.XrayTestTest)" time="0.0" classname="com.taf.auto.jira.pojo.xray.XrayTestTest">
    <skipped/>
  </testcase> <!-- test21188 on test21188(com.taf.auto.jira.pojo.xray.XrayTestTest) -->
  <testcase name="test22174 on test22174(com.taf.auto.jira.pojo.xray.XrayTestTest)" time="0.0" classname="com.taf.auto.jira.pojo.xray.XrayTestTest">
    <skipped/>
  </testcase> <!-- test22174 on test22174(com.taf.auto.jira.pojo.xray.XrayTestTest) -->
  <testcase name="shouldDecommissionTest on shouldDecommissionTest(com.taf.auto.jira.TestDecommissionerTest)" time="0.029" classname="com.taf.auto.jira.TestDecommissionerTest"/>
  <testcase name="shouldNotDecommissionTest on shouldNotDecommissionTest(com.taf.auto.jira.TestDecommissionerTest)" time="0.077" classname="com.taf.auto.jira.TestDecommissionerTest"/>
  <testcase name="splitKeysTest on splitKeysTest(com.taf.auto.jira.app.ui.fetch.XrayFetchPageTest)" time="0.015" classname="com.taf.auto.jira.app.ui.fetch.XrayFetchPageTest"/>
  <testcase name="testUpdateSummary on testUpdateSummary(com.taf.auto.jira.JIRAUtilTest)" time="0.0" classname="com.taf.auto.jira.JIRAUtilTest">
    <skipped/>
  </testcase> <!-- testUpdateSummary on testUpdateSummary(com.taf.auto.jira.JIRAUtilTest) -->
  <testcase name="testManageComment on testManageComment(com.taf.auto.jira.JIRAUtilTest)" time="0.0" classname="com.taf.auto.jira.JIRAUtilTest">
    <skipped/>
  </testcase> <!-- testManageComment on testManageComment(com.taf.auto.jira.JIRAUtilTest) -->
  <testcase name="testUpdateEnv on testUpdateEnv(com.taf.auto.jira.JIRAUtilTest)" time="0.0" classname="com.taf.auto.jira.JIRAUtilTest">
    <skipped/>
  </testcase> <!-- testUpdateEnv on testUpdateEnv(com.taf.auto.jira.JIRAUtilTest) -->
  <testcase name="testUpdateFixVersion on testUpdateFixVersion(com.taf.auto.jira.JIRAUtilTest)" time="0.0" classname="com.taf.auto.jira.JIRAUtilTest">
    <skipped/>
  </testcase> <!-- testUpdateFixVersion on testUpdateFixVersion(com.taf.auto.jira.JIRAUtilTest) -->
  <testcase name="testUpdateIssueRemoveLabel on testUpdateIssueRemoveLabel(com.taf.auto.jira.JIRAUtilTest)" time="0.0" classname="com.taf.auto.jira.JIRAUtilTest">
    <skipped/>
  </testcase> <!-- testUpdateIssueRemoveLabel on testUpdateIssueRemoveLabel(com.taf.auto.jira.JIRAUtilTest) -->
  <testcase name="testUpdateRevision on testUpdateRevision(com.taf.auto.jira.JIRAUtilTest)" time="0.0" classname="com.taf.auto.jira.JIRAUtilTest">
    <skipped/>
  </testcase> <!-- testUpdateRevision on testUpdateRevision(com.taf.auto.jira.JIRAUtilTest) -->
  <testcase name="testUpdateITTeam on testUpdateITTeam(com.taf.auto.jira.JIRAUtilTest)" time="0.0" classname="com.taf.auto.jira.JIRAUtilTest">
    <skipped/>
  </testcase> <!-- testUpdateITTeam on testUpdateITTeam(com.taf.auto.jira.JIRAUtilTest) -->
  <testcase name="testUpdateSprint on testUpdateSprint(com.taf.auto.jira.JIRAUtilTest)" time="0.0" classname="com.taf.auto.jira.JIRAUtilTest">
    <skipped/>
  </testcase> <!-- testUpdateSprint on testUpdateSprint(com.taf.auto.jira.JIRAUtilTest) -->
  <testcase name="testAddLabels on testAddLabels(com.taf.auto.jira.JIRAUtilTest)" time="0.0" classname="com.taf.auto.jira.JIRAUtilTest">
    <skipped/>
  </testcase> <!-- testAddLabels on testAddLabels(com.taf.auto.jira.JIRAUtilTest) -->
  <testcase name="testRemoveFixVersion on testRemoveFixVersion(com.taf.auto.jira.JIRAUtilTest)" time="0.0" classname="com.taf.auto.jira.JIRAUtilTest">
    <skipped/>
  </testcase> <!-- testRemoveFixVersion on testRemoveFixVersion(com.taf.auto.jira.JIRAUtilTest) -->
  <testcase name="isLetter on isLetter(com.taf.auto.data.DataValidationUtilTest)" time="0.001" classname="com.taf.auto.data.DataValidationUtilTest"/>
  <testcase name="generateLetters on generateLetters(com.taf.auto.data.DataGenUtilTest)" time="0.0" classname="com.taf.auto.data.DataGenUtilTest"/>
  <testcase name="validateStatusCodeTest on validateStatusCodeTest(com.taf.auto.rest.RestUtilTest)" time="0.001" classname="com.taf.auto.rest.RestUtilTest"/>
  <testcase name="hexToRGBAGarbage on hexToRGBAGarbage(com.taf.auto.ColorUtilTest)" time="0.001" classname="com.taf.auto.ColorUtilTest"/>
  <testcase name="extractColor on extractColor(com.taf.auto.ColorUtilTest)" time="0.002" classname="com.taf.auto.ColorUtilTest"/>
  <testcase name="hexToRGBASpectrum on hexToRGBASpectrum(com.taf.auto.ColorUtilTest)" time="0.002" classname="com.taf.auto.ColorUtilTest"/>
  <testcase name="testDeriveXrayTestKeyFromURI on testDeriveXrayTestKeyFromURI(com.taf.auto.cucumber.CucumberUtilTest)" time="0.002" classname="com.taf.auto.cucumber.CucumberUtilTest"/>
  <testcase name="testExtractMergeKey on testExtractMergeKey(com.taf.auto.cucumber.CucumberUtilTest)" time="0.003" classname="com.taf.auto.cucumber.CucumberUtilTest"/>
  <testcase name="testMergeTestResultsToXray on testMergeTestResultsToXray(com.taf.auto.cucumber.CucumberUtilTest)" time="0.04" classname="com.taf.auto.cucumber.CucumberUtilTest"/>
  <testcase name="testDecode2 on testDecode2(com.taf.auto.cucumber.pojo.CucumberTestResultTest)" time="0.005" classname="com.taf.auto.cucumber.pojo.CucumberTestResultTest"/>
  <testcase name="testDecode on testDecode(com.taf.auto.cucumber.pojo.CucumberTestResultTest)" time="0.012" classname="com.taf.auto.cucumber.pojo.CucumberTestResultTest"/>
  <testcase name="formatting on formatting(com.taf.auto.metrics.MetricsToSplunkReporterTest)" time="0.005" classname="com.taf.auto.metrics.MetricsToSplunkReporterTest"/>
  <testcase name="findNextAvailableTest on findNextAvailableTest(com.taf.auto.IOUtilTest)" time="0.006" classname="com.taf.auto.IOUtilTest"/>
  <testcase name="assertAllWithClearedResultsIsSuccessful on assertAllWithClearedResultsIsSuccessful(com.taf.auto.steps.MultiStepAssertorTest)" time="0.002" classname="com.taf.auto.steps.MultiStepAssertorTest"/>
  <testcase name="assertAllWithNoResultsIsSuccessful on assertAllWithNoResultsIsSuccessful(com.taf.auto.steps.MultiStepAssertorTest)" time="0.003" classname="com.taf.auto.steps.MultiStepAssertorTest"/>
  <testcase name="assertFailWithException on assertFailWithException(com.taf.auto.steps.MultiStepAssertorTest)" time="0.003" classname="com.taf.auto.steps.MultiStepAssertorTest"/>
  <testcase name="noErrorIfNoAssertAllCalled on noErrorIfNoAssertAllCalled(com.taf.auto.steps.MultiStepAssertorTest)" time="0.003" classname="com.taf.auto.steps.MultiStepAssertorTest"/>
  <testcase name="assertFailWithMessage on assertFailWithMessage(com.taf.auto.steps.MultiStepAssertorTest)" time="0.004" classname="com.taf.auto.steps.MultiStepAssertorTest"/>
  <testcase name="assertAllWithSuccessfulResultsIsSuccessful on assertAllWithSuccessfulResultsIsSuccessful(com.taf.auto.steps.MultiStepAssertorTest)" time="0.003" classname="com.taf.auto.steps.MultiStepAssertorTest"/>
  <testcase name="assertTrueWithFalseResult on assertTrueWithFalseResult(com.taf.auto.steps.MultiStepAssertorTest)" time="0.003" classname="com.taf.auto.steps.MultiStepAssertorTest"/>
  <testcase name="assertFalseWithTrueResult on assertFalseWithTrueResult(com.taf.auto.steps.MultiStepAssertorTest)" time="0.003" classname="com.taf.auto.steps.MultiStepAssertorTest"/>
  <testcase name="valueChangeSupersetComparisonTest on valueChangeSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.023" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="orderingSupersetComparisonTest on orderingSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.026" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="additionsSupersetComparisonTest on additionsSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.028" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="deepKeySupersetComparisonTest on deepKeySupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.03" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="supersetComparisonTest on supersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.032" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="deepArraySupersetComparisonTest on deepArraySupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.038" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="omissionsSupersetComparisonTest on omissionsSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.039" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="keyChangeSupersetComparisonTest on keyChangeSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.042" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="nestedSupersetComparisonTest on nestedSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.044" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="trivialSupersetComparisonTest on trivialSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.05" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="multipleNestingSupersetComparisonTest on multipleNestingSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.052" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="hierarchySupersetComparisonTest on hierarchySupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" time="0.053" classname="com.taf.auto.io.JSONCompareTest"/>
  <testcase name="locateAuditScript on locateAuditScript(com.taf.auto.accessibility.JSAccessibilityFactoryTest)" time="0.004" classname="com.taf.auto.accessibility.JSAccessibilityFactoryTest"/>
  <testcase name="locateJQueryScript on locateJQueryScript(com.taf.auto.accessibility.JSAccessibilityFactoryTest)" time="0.005" classname="com.taf.auto.accessibility.JSAccessibilityFactoryTest"/>
  <testcase name="getByFromField_withFindAll on getByFromField_withFindAll(com.taf.auto.ElementUtilTest)" time="0.012" classname="com.taf.auto.ElementUtilTest"/>
  <testcase name="getByFromField_withFindBys on getByFromField_withFindBys(com.taf.auto.ElementUtilTest)" time="0.229" classname="com.taf.auto.ElementUtilTest"/>
  <testcase name="getByFromField_noField on getByFromField_noField(com.taf.auto.ElementUtilTest)" time="0.23" classname="com.taf.auto.ElementUtilTest"/>
  <testcase name="webElementToString on webElementToString(com.taf.auto.ElementUtilTest)" time="0.23" classname="com.taf.auto.ElementUtilTest"/>
  <testcase name="getByFromField_noFindBy on getByFromField_noFindBy(com.taf.auto.ElementUtilTest)" time="0.23" classname="com.taf.auto.ElementUtilTest"/>
  <testcase name="getByFromField_withFindBy on getByFromField_withFindBy(com.taf.auto.ElementUtilTest)" time="0.231" classname="com.taf.auto.ElementUtilTest"/>
</testsuite> <!-- Surefire test -->
