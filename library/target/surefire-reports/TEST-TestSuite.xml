<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="TestSuite" time="3.254" tests="76" errors="0" skipped="18" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.201-b09"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/ubuntu/Desktop/GitHub/taf_base"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/ubuntu/Desktop/GitHub/taf_base"/>
    <property name="java.runtime.version" value="1.8.0_201-b09"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.15.0-54-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/ubuntu"/>
    <property name="user.timezone" value="America/New_York"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="ubuntu"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_201"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="lackOfInstallPatternRejected on lackOfInstallPatternRejected(com.taf.auto.page.AbstractPageTest)" classname="com.taf.auto.page.AbstractPageTest" time="0.048"/>
  <testcase name="installPatternEnforced on installPatternEnforced(com.taf.auto.page.AbstractPageTest)" classname="com.taf.auto.page.AbstractPageTest" time="0.006"/>
  <testcase name="rudimentary on rudimentary(com.taf.auto.spellcheck.SpellingScannerTest)" classname="com.taf.auto.spellcheck.SpellingScannerTest" time="2.016"/>
  <testcase name="standardizeColumnWidthsTest on standardizeColumnWidthsTest(com.taf.auto.common.PrettyPrinterTest)" classname="com.taf.auto.common.PrettyPrinterTest" time="0.011"/>
  <testcase name="prettyArray on prettyArray(com.taf.auto.common.PrettyPrinterTest)" classname="com.taf.auto.common.PrettyPrinterTest" time="0"/>
  <testcase name="recordColumnWidthsTest on recordColumnWidthsTest(com.taf.auto.common.PrettyPrinterTest)" classname="com.taf.auto.common.PrettyPrinterTest" time="0"/>
  <testcase name="stripTrailingIndexTest on stripTrailingIndexTest(com.taf.auto.StringUtilTest)" classname="com.taf.auto.StringUtilTest" time="0"/>
  <testcase name="allLinesEqualTest on allLinesEqualTest(com.taf.auto.StringUtilTest)" classname="com.taf.auto.StringUtilTest" time="0"/>
  <testcase name="stripQuotedTest on stripQuotedTest(com.taf.auto.StringUtilTest)" classname="com.taf.auto.StringUtilTest" time="0"/>
  <testcase name="validateTest on validateTest(com.taf.auto.jira.xray.ScenarioEmitterTest)" classname="com.taf.auto.jira.xray.ScenarioEmitterTest" time="0.08"/>
  <testcase name="validateEmptyTest on validateEmptyTest(com.taf.auto.jira.xray.ScenarioEmitterTest)" classname="com.taf.auto.jira.xray.ScenarioEmitterTest" time="0.001"/>
  <testcase name="validateMalformedTest on validateMalformedTest(com.taf.auto.jira.xray.ScenarioEmitterTest)" classname="com.taf.auto.jira.xray.ScenarioEmitterTest" time="0.003"/>
  <testcase name="testNames on testNames(com.taf.auto.jira.xray.XrayTestStatusesTest)" classname="com.taf.auto.jira.xray.XrayTestStatusesTest" time="0.001"/>
  <testcase name="testDecode on testDecode(com.taf.auto.jira.xray.pojo.XrayExecutionResultTest)" classname="com.taf.auto.jira.xray.pojo.XrayExecutionResultTest" time="0.216"/>
  <testcase name="fetchIssuesByTestSetTest on fetchIssuesByTestSetTest(com.taf.auto.jira.pojo.xray.TestXrayUtil)" classname="com.taf.auto.jira.pojo.xray.TestXrayUtil" time="0">
    <skipped/>
  </testcase>
  <testcase name="test12430 on test12430(com.taf.auto.jira.pojo.xray.XrayTestTest)" classname="com.taf.auto.jira.pojo.xray.XrayTestTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="test14845 on test14845(com.taf.auto.jira.pojo.xray.XrayTestTest)" classname="com.taf.auto.jira.pojo.xray.XrayTestTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="test15861 on test15861(com.taf.auto.jira.pojo.xray.XrayTestTest)" classname="com.taf.auto.jira.pojo.xray.XrayTestTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="test16101 on test16101(com.taf.auto.jira.pojo.xray.XrayTestTest)" classname="com.taf.auto.jira.pojo.xray.XrayTestTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="test19303 on test19303(com.taf.auto.jira.pojo.xray.XrayTestTest)" classname="com.taf.auto.jira.pojo.xray.XrayTestTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="test21188 on test21188(com.taf.auto.jira.pojo.xray.XrayTestTest)" classname="com.taf.auto.jira.pojo.xray.XrayTestTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="test22174 on test22174(com.taf.auto.jira.pojo.xray.XrayTestTest)" classname="com.taf.auto.jira.pojo.xray.XrayTestTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="shouldDecommissionTest on shouldDecommissionTest(com.taf.auto.jira.TestDecommissionerTest)" classname="com.taf.auto.jira.TestDecommissionerTest" time="0.03"/>
  <testcase name="shouldNotDecommissionTest on shouldNotDecommissionTest(com.taf.auto.jira.TestDecommissionerTest)" classname="com.taf.auto.jira.TestDecommissionerTest" time="0.047"/>
  <testcase name="splitKeysTest on splitKeysTest(com.taf.auto.jira.app.ui.fetch.XrayFetchPageTest)" classname="com.taf.auto.jira.app.ui.fetch.XrayFetchPageTest" time="0.015"/>
  <testcase name="testUpdateSummary on testUpdateSummary(com.taf.auto.jira.JIRAUtilTest)" classname="com.taf.auto.jira.JIRAUtilTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="testManageComment on testManageComment(com.taf.auto.jira.JIRAUtilTest)" classname="com.taf.auto.jira.JIRAUtilTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="testUpdateEnv on testUpdateEnv(com.taf.auto.jira.JIRAUtilTest)" classname="com.taf.auto.jira.JIRAUtilTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="testUpdateFixVersion on testUpdateFixVersion(com.taf.auto.jira.JIRAUtilTest)" classname="com.taf.auto.jira.JIRAUtilTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="testUpdateIssueRemoveLabel on testUpdateIssueRemoveLabel(com.taf.auto.jira.JIRAUtilTest)" classname="com.taf.auto.jira.JIRAUtilTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="testUpdateRevision on testUpdateRevision(com.taf.auto.jira.JIRAUtilTest)" classname="com.taf.auto.jira.JIRAUtilTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="testUpdateITTeam on testUpdateITTeam(com.taf.auto.jira.JIRAUtilTest)" classname="com.taf.auto.jira.JIRAUtilTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="testUpdateSprint on testUpdateSprint(com.taf.auto.jira.JIRAUtilTest)" classname="com.taf.auto.jira.JIRAUtilTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="testAddLabels on testAddLabels(com.taf.auto.jira.JIRAUtilTest)" classname="com.taf.auto.jira.JIRAUtilTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="testRemoveFixVersion on testRemoveFixVersion(com.taf.auto.jira.JIRAUtilTest)" classname="com.taf.auto.jira.JIRAUtilTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="isLetter on isLetter(com.taf.auto.data.DataValidationUtilTest)" classname="com.taf.auto.data.DataValidationUtilTest" time="0"/>
  <testcase name="generateLetters on generateLetters(com.taf.auto.data.DataGenUtilTest)" classname="com.taf.auto.data.DataGenUtilTest" time="0.001"/>
  <testcase name="validateStatusCodeTest on validateStatusCodeTest(com.taf.auto.rest.RestUtilTest)" classname="com.taf.auto.rest.RestUtilTest" time="0.001"/>
  <testcase name="hexToRGBAGarbage on hexToRGBAGarbage(com.taf.auto.ColorUtilTest)" classname="com.taf.auto.ColorUtilTest" time="0.001"/>
  <testcase name="extractColor on extractColor(com.taf.auto.ColorUtilTest)" classname="com.taf.auto.ColorUtilTest" time="0"/>
  <testcase name="hexToRGBASpectrum on hexToRGBASpectrum(com.taf.auto.ColorUtilTest)" classname="com.taf.auto.ColorUtilTest" time="0.002"/>
  <testcase name="testDeriveXrayTestKeyFromURI on testDeriveXrayTestKeyFromURI(com.taf.auto.cucumber.CucumberUtilTest)" classname="com.taf.auto.cucumber.CucumberUtilTest" time="0.001"/>
  <testcase name="testExtractMergeKey on testExtractMergeKey(com.taf.auto.cucumber.CucumberUtilTest)" classname="com.taf.auto.cucumber.CucumberUtilTest" time="0.001"/>
  <testcase name="testMergeTestResultsToXray on testMergeTestResultsToXray(com.taf.auto.cucumber.CucumberUtilTest)" classname="com.taf.auto.cucumber.CucumberUtilTest" time="0.038"/>
  <testcase name="testDecode2 on testDecode2(com.taf.auto.cucumber.pojo.CucumberTestResultTest)" classname="com.taf.auto.cucumber.pojo.CucumberTestResultTest" time="0.005"/>
  <testcase name="testDecode on testDecode(com.taf.auto.cucumber.pojo.CucumberTestResultTest)" classname="com.taf.auto.cucumber.pojo.CucumberTestResultTest" time="0.007"/>
  <testcase name="formatting on formatting(com.taf.auto.metrics.MetricsToSplunkReporterTest)" classname="com.taf.auto.metrics.MetricsToSplunkReporterTest" time="0.005"/>
  <testcase name="findNextAvailableTest on findNextAvailableTest(com.taf.auto.IOUtilTest)" classname="com.taf.auto.IOUtilTest" time="0.006"/>
  <testcase name="assertAllWithClearedResultsIsSuccessful on assertAllWithClearedResultsIsSuccessful(com.taf.auto.steps.MultiStepAssertorTest)" classname="com.taf.auto.steps.MultiStepAssertorTest" time="0.001"/>
  <testcase name="assertAllWithNoResultsIsSuccessful on assertAllWithNoResultsIsSuccessful(com.taf.auto.steps.MultiStepAssertorTest)" classname="com.taf.auto.steps.MultiStepAssertorTest" time="0"/>
  <testcase name="assertFailWithException on assertFailWithException(com.taf.auto.steps.MultiStepAssertorTest)" classname="com.taf.auto.steps.MultiStepAssertorTest" time="0"/>
  <testcase name="noErrorIfNoAssertAllCalled on noErrorIfNoAssertAllCalled(com.taf.auto.steps.MultiStepAssertorTest)" classname="com.taf.auto.steps.MultiStepAssertorTest" time="0"/>
  <testcase name="assertFailWithMessage on assertFailWithMessage(com.taf.auto.steps.MultiStepAssertorTest)" classname="com.taf.auto.steps.MultiStepAssertorTest" time="0"/>
  <testcase name="assertAllWithSuccessfulResultsIsSuccessful on assertAllWithSuccessfulResultsIsSuccessful(com.taf.auto.steps.MultiStepAssertorTest)" classname="com.taf.auto.steps.MultiStepAssertorTest" time="0"/>
  <testcase name="assertTrueWithFalseResult on assertTrueWithFalseResult(com.taf.auto.steps.MultiStepAssertorTest)" classname="com.taf.auto.steps.MultiStepAssertorTest" time="0"/>
  <testcase name="assertFalseWithTrueResult on assertFalseWithTrueResult(com.taf.auto.steps.MultiStepAssertorTest)" classname="com.taf.auto.steps.MultiStepAssertorTest" time="0"/>
  <testcase name="valueChangeSupersetComparisonTest on valueChangeSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.021"/>
  <testcase name="orderingSupersetComparisonTest on orderingSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.002"/>
  <testcase name="additionsSupersetComparisonTest on additionsSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.002"/>
  <testcase name="deepKeySupersetComparisonTest on deepKeySupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.001"/>
  <testcase name="supersetComparisonTest on supersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.003"/>
  <testcase name="deepArraySupersetComparisonTest on deepArraySupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.005"/>
  <testcase name="omissionsSupersetComparisonTest on omissionsSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.002"/>
  <testcase name="keyChangeSupersetComparisonTest on keyChangeSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.002"/>
  <testcase name="nestedSupersetComparisonTest on nestedSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.002"/>
  <testcase name="trivialSupersetComparisonTest on trivialSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.006"/>
  <testcase name="multipleNestingSupersetComparisonTest on multipleNestingSupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.002"/>
  <testcase name="hierarchySupersetComparisonTest on hierarchySupersetComparisonTest(com.taf.auto.io.JSONCompareTest)" classname="com.taf.auto.io.JSONCompareTest" time="0.002"/>
  <testcase name="locateAuditScript on locateAuditScript(com.taf.auto.accessibility.JSAccessibilityFactoryTest)" classname="com.taf.auto.accessibility.JSAccessibilityFactoryTest" time="0.003"/>
  <testcase name="locateJQueryScript on locateJQueryScript(com.taf.auto.accessibility.JSAccessibilityFactoryTest)" classname="com.taf.auto.accessibility.JSAccessibilityFactoryTest" time="0.001"/>
  <testcase name="getByFromField_withFindAll on getByFromField_withFindAll(com.taf.auto.ElementUtilTest)" classname="com.taf.auto.ElementUtilTest" time="0.011"/>
  <testcase name="getByFromField_withFindBys on getByFromField_withFindBys(com.taf.auto.ElementUtilTest)" classname="com.taf.auto.ElementUtilTest" time="0.219"/>
  <testcase name="getByFromField_noField on getByFromField_noField(com.taf.auto.ElementUtilTest)" classname="com.taf.auto.ElementUtilTest" time="0"/>
  <testcase name="webElementToString on webElementToString(com.taf.auto.ElementUtilTest)" classname="com.taf.auto.ElementUtilTest" time="0"/>
  <testcase name="getByFromField_noFindBy on getByFromField_noFindBy(com.taf.auto.ElementUtilTest)" classname="com.taf.auto.ElementUtilTest" time="0"/>
  <testcase name="getByFromField_withFindBy on getByFromField_withFindBy(com.taf.auto.ElementUtilTest)" classname="com.taf.auto.ElementUtilTest" time="0"/>
</testsuite>